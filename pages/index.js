import Head from 'next/head';
import React,{useEffect,useState} from 'react';
import setBump from '../javascript/setBump';
import randomizer from '../javascript/randomizer';
import getLink from '../javascript/getLink';
import {useQuery} from 'react-query';
import Image from '../components/Image';

const LOCAL_STORAGE_KEY='date and image';
export const appContext = React.createContext();

export default function Home() 
{
  const{data,status,isPreviousData}=useQuery(['artistPage'] ,fetchArtitsPage);
  const[day,setDay]=useState(150);

  const link = getLink();
  const currentDate = new Date();

  const contextValue=
  {
    currentDate,
    getLocal,
    LOCAL_STORAGE_KEY
  }
  
  function getLocal()
  {
    const local = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));
    if(local===undefined || local===null)return undefined
    return local
  }
  
  useEffect(()=>
  {
    const localDay = Number(localStorage.getItem('days'))
    const local=getLocal();

    if(local===undefined)return
    if(getLocal().date !== currentDate.getDate())
    {
      if(localDay===null)return
      setDay(localDay-1)
      return
    }
    console.log('estoy abajo')
    setDay(localDay)
  },[])

  useEffect(()=>
  {
    localStorage.setItem('days',day);
  },[day])


  async function fetchArtitsPage({queryKey})
  {
      const res = await fetch(link)
      const data = await res.text();
      const html = new DOMParser().parseFromString(data,'text/html');
      return randomizeElements(html)
  }

  switch(status)
  {
    case 'loading':console.log('loading')
    break;
    case 'success':console.log('success')
    break;
    case 'error':console.log('errror')
  }

  function randomizeElements(html)
  {
     console.log(html)
     const container = html.querySelector("#post-list").children[1].children[0];
     console.log(container)
     const links = [...container.children].map((span) => span.children[0].href);
     console.log(links)
     const linksShuffle = randomizer(links);
     console.log(linksShuffle)
     const castingLink = linksShuffle[0].split("/").splice(3, 1);
     return `https://safebooru.org/${castingLink.join("")}`;
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link href="https://fonts.googleapis.com/css2?family=DynaPuff:wght@500&family=Lato:wght@400;900&family=Silkscreen:wght@400;700&display=swap" rel="stylesheet"></link>
      </Head>
      <header className='hero-banner'>
          <span>the ultimate counter</span> 
      </header>
      <appContext.Provider value={contextValue}>
         <main className='counter-app'>
            <h1 className='counter-app__counter'>
                <span className='counter-app__days'>
                  <span>
                    {day} days
                  </span>
                  <span>
                    {150-day} days                   
                  </span> 
                </span>
            </h1>
            {status==='loading'&&<div>loading</div>}
            {status==='success' && data && <Image pageLink={data}/>} 
         </main>
      </appContext.Provider>
      <button className='counter-app__restart-button' onClick={()=>
              {
                const day = 150;
                localStorage.setItem('days',day);
                setDay(day)
              }}>restart??
            </button>
      <footer>
      </footer>
    </div>
  )
}
